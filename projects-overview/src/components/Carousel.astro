---
const slides = [
  {
    title: "Kanban Board",
    description: `
      Front-end project providing visualizations and interaction with kanban board.
      Kanban board visually depict work at various stages of a process using cards to represent work items and columns to represent each stage of the process. Cards are moved between the columns to show progress and to help coordinate teams performing the work.
      `,
    anchorLink: "#kanban-board",
    gitHubLink: "https://github.com/GrishaAngelovGH/kanban-board",
    liveDemoLink: "https://kanban-board-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "Map UI Visualization",
    description: `
      Map UI Visualization project is a solution for dynamically showcasing 
      geographic data, locations, routes, and visual summaries. It provides a versatile 
      platform for users to explore detailed map, interact with London-specific geographical 
      features, and delve into various specialized visualizations.
    `,
    anchorLink: "#map-ui",
    gitHubLink: "https://github.com/GrishaAngelovGH/map-ui",
    liveDemoLink: "https://map-ui-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "Inventory Management System",
    description: `
      The inventory management system is an all-in-one platform designed to optimize inventory 
      tracking and management. It provides an intuitive dashboard with key metrics and 
      visualizations, tools for managing product categories and individual products, 
      sales tracking features, and reporting capabilities.   
      `,
    anchorLink: "#inventory-management-system",
    gitHubLink:
      "https://github.com/GrishaAngelovGH/inventory-management-system",
    liveDemoLink:
      "https://inventory-management-system-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "Framer Motion Movie Catalog",
    description: `
      The Framer Motion Movie Catalog is an interactive application that uses the Framer Motion 
      library to create dynamic and animated experiences. The app features a movie catalog where 
      users can bookmark favorites, view detailed information, and explore showtimes for selected 
      cinemas. Additionally, the app includes an "Experiences" section showcasing best-selling products, 
      with the ability to add items to a shopping cart, adjust quantities, and manage orders seamlessly. 
      This project highlights practical motion design techniques while delivering a visually engaging and 
      user-friendly interface.
      `,
    anchorLink: "#framer-motion-movie-catalog",
    gitHubLink:
      "https://github.com/GrishaAngelovGH/framer-motion-movie-catalog",
    liveDemoLink:
      "https://framer-motion-movie-catalog-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "JWT Authentication and Authorization App",
    description: `
      A demo application showcasing JWT-based authentication and authorization, with a Node.js 
      backend and a ReactJS frontend for secure route protection and session management.
      The app streamlines secure access with server-side credential validation, JWT creation, 
      and endpoint protection. On the client side, it provides a public login page, JWT-protected routes, user logout, and secure data fetching.
      `,
    anchorLink: "#jwt-auth-and-authz",
    gitHubLink: "https://github.com/GrishaAngelovGH/jwt-auth-and-authz-demo",
  },
  {
    title: "Motion Design for the Web Course",
    description: `
      This course equips developers with the skills to seamlessly integrate motion design 
      into web projects. Covering tools like CSS, JavaScript, GSAP, SVG, and Lottie, it offers 
      practical exercises such as creating video backgrounds, scroll-triggered animations, and 
      parallax effects. With an emphasis on real-world applications and performance optimization, 
      this course is ideal for enhancing user experience and bringing dynamic interactivity to modern web designs.
      `,
    anchorLink: "#web-motion-course",
    gitHubLink: "https://github.com/GrishaAngelovGH/web-motion-course",
  },
  {
    title: "Machine Learning Exploration",
    description: `
      This project is my attempt to dive into the world of fundamental machine learning algorithms.
      It contains notes with practical examples.
      `,
    anchorLink: "#machine-learning-exploration",
    gitHubLink:
      "https://github.com/GrishaAngelovGH/machine-learning-exploration",
  },
  {
    title: "TensorFlow QnA",
    description: `
      This project leverages the power of ReactJS and TensorFlow.js to deliver a seamless and interactive question-answering platform. 
      By integrating ReactJS, it ensures a dynamic and responsive user interface, while TensorFlow.js facilitates natural language 
      processing capabilities directly within the browser. The system is designed to interpret user queries in natural language 
      and provide accurate, context-aware answers in real time.
      `,
    anchorLink: "#react-tensorflow-qna",
    gitHubLink: "https://github.com/GrishaAngelovGH/react-tensorflow-qna",
  },
  {
    title: "Algorithm Visualizer",
    description: `
      Front-end project implementing various algorithms with step-by-step visualization.
      `,
    anchorLink: "#algorithm-visualizer",
    gitHubLink: "https://github.com/GrishaAngelovGH/algorithms",
    liveDemoLink: "https://algorithms-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "Voice-To-Map Visualization",
    description: `
      Front-end project implementing visualization of geographical map locations by voice input from the user.
      `,
    anchorLink: "#voice-to-map-visualization",
    gitHubLink: "https://github.com/GrishaAngelovGH/voice-to-map",
    liveDemoLink: "https://voice-to-map-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "E-commerce Store",
    description: `
      Front-end project implementing features of an E-commerce store. 
      Users can preview various products by category, post comments 
      for each product within a given category, use a shopping bag, 
      and perform a multi-step checkout process to complete their order.  
      `,
    anchorLink: "#ecommerce-store",
    gitHubLink: "https://github.com/GrishaAngelovGH/grocery-store",
    liveDemoLink: "https://grocery-store-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "Handwritten Digit Recognition",
    description: `
      Front-end project implementing handwritten digit recognition based on tensorflow.js 
      - a library that allows you to develop Machine Learning Models in JavaScript and 
      use Machine Learning directly in the browser or in Node.js  
      `,
    anchorLink: "#handwritten-digit-recognition",
    gitHubLink:
      "https://github.com/GrishaAngelovGH/handwritten-digit-recognition",
    liveDemoLink:
      "https://handwritten-digit-recognition-grishaangelovs-projects.vercel.app/",
  },
  {
    title: "AstroJS SSR Blog",
    description: `
      This project is a simple blog application built with AstroJS. 
      The user can view the articles and filter them by title or hashtag.  
    `,
    anchorLink: "#astrojs-ssr-blog",
    gitHubLink: "https://github.com/GrishaAngelovGH/astrojs-ssr-blog",
  },
  {
    title: "Book List GraphQL App",
    description: `
      This application is a dynamic book list built with GraphQL and Apollo Client, offering interaction with book data. 
      It allows users to browse a list of books, add new entries to the list, 
      and view detailed information about a selected book, including its author's other works. 
      Additionally, users can delete books directly, ensuring efficient management of the book list. 
    `,
    anchorLink: "#book-list-graphql-app",
    gitHubLink: "https://github.com/GrishaAngelovGH/graphql-app",
  },
  {
    title: "Zustand Item List Demo",
    description: `
      This app is a hands-on experience with Zustand library.It lets the user to manage simple items list. 
      Visualize items, adjust quantities, mark items, and track statuses. 
      Powered by Zustand's persistent state management, the data stays intact even after refreshing or closing the app. 
    `,
    anchorLink: "#zustand-item-list-app",
    gitHubLink: "https://github.com/GrishaAngelovGH/Zustand-App",
  },
];
---

<div
  id="hero-carousel"
  data-bs-interval="5000"
  class="container carousel carousel-fade"
  data-bs-ride="carousel"
>
  {
    slides.map((v, i) => (
      <div class={`carousel-item ${i === 0 ? "active" : ""}`}>
        <div class="carousel-container">
          <h2 class="animate__animated animate__fadeInDown">{v.title}</h2>
          <div class="animate__animated animate__fadeInUp">
            <p>{v.description}</p>
            <p>
              Read more detailed description about implemented features and used
              technologies in the section below.
            </p>
          </div>

          <div class="d-flex flex-column flex-md-row gap-0 gap-md-5">
            <a
              href={v.anchorLink}
              class="btn-get-started animate__animated animate__fadeInUp scrollto"
            >
              Read More
            </a>
            <a
              href={v.gitHubLink}
              target="_blank"
              class="btn-get-started animate__animated animate__fadeInUp scrollto"
            >
              View on GitHub
            </a>
            {v.liveDemoLink && (
              <a
                href={v.liveDemoLink}
                target="_blank"
                class="btn-get-started animate__animated animate__fadeInUp scrollto"
              >
                Live Demo
              </a>
            )}
          </div>
        </div>
      </div>
    ))
  }

  <a
    class="carousel-control-prev"
    href="#hero-carousel"
    role="button"
    data-bs-slide="prev"
  >
    <span
      class="carousel-control-prev-icon bi bi-chevron-left"
      aria-hidden="true"
    >
    </span>
  </a>

  <a
    class="carousel-control-next"
    href="#hero-carousel"
    role="button"
    data-bs-slide="next"
  >
    <span
      class="carousel-control-next-icon bi bi-chevron-right"
      aria-hidden="true"
    >
    </span>
  </a>
</div>
